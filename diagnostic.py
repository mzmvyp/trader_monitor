#!/usr/bin/env python3
# create_init_files.py - Cria arquivos __init__.py necess√°rios

import os

def create_init_file(directory):
    """Cria arquivo __init__.py em um diret√≥rio se n√£o existir"""
    init_path = os.path.join(directory, '__init__.py')
    
    if not os.path.exists(init_path):
        try:
            with open(init_path, 'w', encoding='utf-8') as f:
                f.write(f'# {directory}/__init__.py\n')
                f.write(f'# Este arquivo marca "{directory}" como um pacote Python.\n')
            print(f"‚úÖ Criado: {init_path}")
            return True
        except Exception as e:
            print(f"‚ùå Erro ao criar {init_path}: {e}")
            return False
    else:
        print(f"‚úÖ J√° existe: {init_path}")
        return True

def main():
    print("üîß Criando arquivos __init__.py necess√°rios...")
    
    # Diret√≥rios que precisam de __init__.py
    directories = [
        'utils',
        'models', 
        'database',
        'services',
        'routes'
    ]
    
    success_count = 0
    
    for directory in directories:
        print(f"\nüìÅ Processando: {directory}/")
        
        # Criar diret√≥rio se n√£o existir
        if not os.path.exists(directory):
            try:
                os.makedirs(directory, exist_ok=True)
                print(f"‚úÖ Diret√≥rio criado: {directory}/")
            except Exception as e:
                print(f"‚ùå Erro ao criar diret√≥rio {directory}/: {e}")
                continue
        
        # Criar __init__.py
        if create_init_file(directory):
            success_count += 1
    
    print(f"\nüìä Resultado: {success_count}/{len(directories)} arquivos __init__.py criados/verificados")
    
    if success_count == len(directories):
        print("üéâ Todos os arquivos __init__.py est√£o prontos!")
    else:
        print("‚ö†Ô∏è Alguns arquivos n√£o puderam ser criados")

if __name__ == "__main__":
    main()